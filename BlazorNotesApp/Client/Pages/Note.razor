@page "/note"
@page "/note/{id:int}"
@inject INotesService NotesService

@if (Id == null)
{
    <PageTitle>New Note</PageTitle>
    <h3>New Note</h3>
}
else
{
    <PageTitle>Update @note.Heading</PageTitle>
    <h3>Edit @note.Heading</h3>
}

<EditForm Model="note" OnSubmit="HandleSubmit">
    <div>
        <label for="heading">Heading</label>
        <InputText id="heading" class="form-control" @bind-Value="@note.Heading"></InputText>
    </div>
    <div>
        <label for="body">Body</label>
        <InputTextArea id="body" class="form-control" @bind-Value="@note.Body"></InputTextArea>
    </div>
    <div>
        <label>Completed</label>
        <InputCheckbox @bind-Value="@note.IsChecked" ></InputCheckbox>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>

</EditForm>


@code {
    [Parameter]

    public int? Id { get; set; }

    NoteModel note = new NoteModel();

    string btnText = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        note = await NotesService.GetSingleNote(Id);
    }

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Create Note" : "Update Note";
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await NotesService.CreateNote(note);
        }
        else
        {
            await NotesService.UpdateNote(note, Id);
        }

    }

}
